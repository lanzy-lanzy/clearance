# Generated by Django 5.1.6 on 2025-02-12 15:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('office_type', models.CharField(choices=[('SET', 'SET'), ('STE', 'STE'), ('SOCJE', 'SOCJE'), ('SAFES', 'SAFES'), ('SSB SET', 'SSB SET'), ('SSB STE', 'SSB STE'), ('SSB SOCJE', 'SSB SOCJE'), ('SSB SAFES', 'SSB SAFES'), ('OTHER', 'OTHER')], default='OTHER', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProgramChair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('SET DEAN', 'School of Engineering and Technology (BSIT)'), ('STE DEAN', 'School of Teacher Education (BPED,BEED,BSED,BAELS,BSMATH)'), ('SOCJE DEAN', 'School of Criminal Justice Education (BSCRIM,BSISM)'), ('SAFES DEAN', 'School of Agriculture Forestry and Environmental Science (BSA,BSAES,BCF)')], max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('is_dormitory_owner', models.BooleanField(default=False)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='core.office')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('course', models.CharField(max_length=255)),
                ('year_level', models.IntegerField()),
                ('is_boarder', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_students', to=settings.AUTH_USER_MODEL)),
                ('dormitory_owner', models.ForeignKey(blank=True, limit_choices_to={'is_dormitory_owner': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students_dorm', to='core.staff')),
                ('program_chair', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.programchair')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='ClearanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Reasons for pending or denied clearance.', null=True)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clearance_requests', to='core.office')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.staff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clearance_requests', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='Clearance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_cleared', models.BooleanField(default=False)),
                ('cleared_date', models.DateTimeField(blank=True, null=True)),
                ('program_chair_approved', models.BooleanField(default=False)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clearance', to='core.student')),
            ],
        ),
    ]
